#
# Assumes you have a fresh installation of Ubuntu server
#

# logon to IONOS and set lv-app-tmp and lv-data-tmp subdomains to point to ip address of new server
# set hostname so we can recognise server
sudo hostnamectl set-hostname <new-hostname>
#
# Create user - logged on as root
adduser roberto
# add to group sudo
usermod -aG sudo roberto

#logout and re-login as "roberto"
# prevent sudo from propting
sudo visudo
# then change  "%sudo ALL=(ALL) ALL" => "%sudo ALL=(ALL) NOPASSWD:ALL
# create installs and websites folders
mkdir installs
mkdir websites
mkdir websites/SmartEnergyLabDataApi
mkdir websites/SmartEnergyLabGui

# set up locale to uk
sudo localectl set-locale LANG=en_GB.utf8
# if en_GB not installed then generate it with
sudo locale-gen en_GB.utf8
# timezone
sudo timedatectl set-timezone Europe/London

# install postgres
sudo apt install postgresql postgresql-contrib
# creates a super user
sudo -u postgres createuser --superuser rob
# change password
sudo -u postgres psql
ALTER USER rob WITH PASSWORD 'speedy';
CREATE USER smart_energy_lab;
ALTER USER smart_energy_lab PASSWORD '1234567890';
CREATE DATABASE smart_energy_lab WITH OWNER = smart_energy_lab;
\q
#
# Edit config to accept external connections ...
sudo nano /etc/postgresql/16/main/postgresql.conf
# add/uncomment this line
listen_addresses = '*'
#
sudo nano /etc/postgresql/16/main/pg_hba.conf
# restart postgresql
sudo systemctl restart postgresql
# add these lines (this gives access to these account from home)
host    all             smart_energy_lab             92.27.146.67/32              md5
host    all             rob             92.27.146.67/32              md5
#
#
# Should be able to connect to smart_energy_lab using beaverdb ...
# (ensure port 5432 is open on firewall for server)

# Move smart_energy_lab db to new location ..
# (quicker to go direct)
# FROM CURRENT PRODUCTION SERVER
# dump current db
/usr/bin/pg_dump -h "localhost" -p 5432 -U smart_energy_lab -f db.dump -Fc smart_energy_lab
/usr/bin/pg_restore --clean --if-exists -v -h "<ip address new server>" -U smart_energy_lab -d smart_energy_lab db.dump
# this will take some time ...

# Install .net framework
# (more info here https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu)
sudo apt-get update && \
  sudo apt-get install -y aspnetcore-runtime-8.0
# should appear on list of runtime
dotnet --list-runtimes

#
# install Nginx
#
# more info https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-2.1&tabs=aspnetcore2x
sudo apt install nginx
sudo nano /etc/nginx/sites-available/lv-data.net-zero-energy-systems.org                            # use one from "Server config files"
# replace IP address at top with new ip address of server
sudo ln -s /etc/nginx/sites-available/lv-data.net-zero-energy-systems.org /etc/nginx/sites-enabled/ # add symbolic link
sudo rm /etc/nginx/sites-enabled/default                                                            # remove default behaviour
sudo nginx -t                                                                                       # to test configuration
sudo nginx -s reload                                                                                # to reload config

#
# ON LOCAL TERMINAL
#
# use private key instead of password
ssh-copy-id roberto@<ip address or hostname>

#
# sFtp autoInstall.sh to ~/installs
# sFtp SmartEnergyLabDataApi.service to home directory
# and move to system location
sudo mv SmartEnergyLabDataApi.service /etc/systemd/system
# enable service
sudo systemctl enable SmartEnergyLabDataApi.service

# install unzip
sudo apt install unzip

# edit BuildAndPublishProduction.sh to point to new server then run it
bash BuildAndPublishProduction.sh

#
# Should work on http://lv-data-tmp.net-zero-energy-systems.org/swagger now!
#

# GO BACK to server and install certbot
sudo snap install --classic certbot
# This clears dns cache
sudo systemctl restart systemd-resolved
# check new ip address is correct
dig lv-data.net-zero-energy-systems.org
# run certbot to add support for https:
sudo certbot --nginx -d lv-data.net-zero-energy-systems.org
# clear firefox cache
goto "about:networking#dns"
# test with https://lv-data.net-zero-energy-systems.org!

#
# install gdal
#
# download anaconda from https://www.anaconda.com
#curl -O https://repo.anaconda.com/archive/Anaconda3-2025.06-0-Linux-x86_64.sh
# then restart terminal and ...
#conda install gdal
sudo apt install gdal-bin
# then run this to check it works
ogr2ogr
# add symbolic link to websites install dir
#cd websites/SmartEnergyLabDataApi
#ln -s /home/rob/anaconda3/bin/ogr2ogr .

#
# install smtp server - also installs postfix which is what we want
#
# see also https://hostadvice.com/how-to/how-to-setup-postfix-as-send-only-mail-server-on-an-ubuntu-18-04-dedicated-server-or-vps/
sudo apt install mailutils
# will start a gui - enter "internet site"
# and "net-zero-energy-systems.org" as domain
# now configure postfix
sudo nano /etc/postfix/main.cf
# ensure
## myhostname = lv-data.net-zero-energy-systems.org
## myorigin = net-zero-energy-systems.org
## mydestination = ubuntu, localhost.localdomain, localhost
## inet_interfaces = loopback-only

# restart postfix
sudo systemctl restart postfix
# Look in these places for errors
# sudo cat /var/log/mail.log
# sudo cat /var/log/mail.err
# postqueue -p

#
#unattended upgrades
# upgrade cycle gets run 06-07am (via systemd time /lib/systemd/system/apt-daily-upgrade.timer)
sudo apt install unattended-upgrades
sudo nano /etc/apt/apt.conf.d/50unattended-upgrades
# make these changes to the file:-
# Unattended-Upgrade::Mail "roldaker@gmail.com";
# Unattended-Upgrade::Automatic-Reboot "true";
# Unattended-Upgrade::Automatic-Reboot-Time "02:00";
sudo nano /etc/apt/apt.conf.d/20auto-upgrades
# APT::Periodic::AutocleanInterval "7";

# also install needrestart - this should restart website services after upgrade to .net
sudo apt install needrestart
sudo nano /etc/needrestart/needrestart.conf
# uncomment this line and chage the 'i' to 'a'
$nrconf{restart} = 'a';

# add crontab enry to backup db daily
crontab -e
# add
MAILTO=roldaker@gmail.com
#
00 04 * * * curl --fail --no-progress-meter http://localhost:5020/Admin/BackupDb > /dev/null
00 05 * * * curl --fail --no-progress-meter --request POST http://localhost:5020/Elexon/ImportGspDemandProfiles > /dev/null
# Monitor dotnet installs and restart services if an update detected
# unattended upgrades runs 6.30ish so scheduled for 8 to ensure its finished
# only redirect stdout so that stderr gets emailed
## commented out as assuming needrestart does this for us
#00 08 * * * cd websites && AutoRestartDotNetServices > /dev/null







